(window.webpackJsonp=window.webpackJsonp||[]).push([[56],{911:function(e,t,l){"use strict";l.r(t);var n=l(44),i=Object(n.a)({},(function(){var e=this,t=e.$createElement,l=e._self._c||t;return l("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[l("ol",[l("li",[e._v("React通过制定大胆的diff策略，将 O(n3) 复杂度的问题转换成 O(n) 复杂度的问题；\nReact是如何将O(n3) 复杂度的问题转换成 O(n) 的？\n"),l("ul",[l("li",[e._v("只进行同级比较")]),e._v(" "),l("li",[e._v("不同类的React组件会被当做完全不同的DOM结构而被完全替换")]),e._v(" "),l("li",[e._v("key prop：开发人员可以通过给Virtual DOM一个唯一的key属性暗示React这是同一个DOM结构，反之若key值不同则会被当做完全不同的DOM结构。")])])]),e._v(" "),l("li",[e._v("React通过分层求异的策略，对tree diff进行算法优化；")]),e._v(" "),l("li",[e._v("React通过相同类生成相似树形结构，不同类生成不同树形结构的策略，对component diff进行算法优化。")]),e._v(" "),l("li",[e._v("React通过设置唯一key的策略，对element diff进行算法优化；")]),e._v(" "),l("li",[e._v("建议，在开发组件时，保持稳定的DOM结构会有助于性能的提升；")]),e._v(" "),l("li",[e._v("建议，在开发过程中，尽量减少类似将最后一个节点移动到列表首部的操作，当节点数量过大或更新操作过于频繁时，在一定程度上会影响React的渲染性能。")])])])}),[],!1,null,null,null);t.default=i.exports}}]);